plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
	id "me.modmuss50.mod-publish-plugin" version "${publish_version}"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	repositories {}
}

publishMods {

	file = remapJar.archiveFile
	changelog = file("changelog.txt").text
	type = STABLE
	modLoaders.add("fabric")

	curseforge {
		projectId = curseforge_project_id
		accessToken = project.findProperty('curseforge_apikey') ?: '0'
		minecraftVersions.add("1.20.1")
		javaVersions.add(JavaVersion.VERSION_17)
		clientRequired = true
		serverRequired = true
	}

	modrinth {
		accessToken = project.findProperty('modrinth_apikey') ?: '0'
		projectId = modrinth_project_id
		minecraftVersions.add("1.20.1")
	}
}